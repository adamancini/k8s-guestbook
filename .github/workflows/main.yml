---
name: CI
on:
  push:
    paths:
      - '**'
      - '!**.md'
      - '!doc/**'
      - '!**.png'
  pull_request:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get tag name, if specified
        run: if grep -q "/tags/" <<< "${GITHUB_REF}"; then echo ::set-output name=tag::${GITHUB_REF:10}; fi
        id: get_tag
      - name: Get branch name
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: get_branch
      - name: Lint the Release
        uses: docker://replicated/vendor-cli:latest
        with:
          args: release lint --yaml-dir=on-prem/manifests
        env:
          REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
          REPLICATED_APP: guestbook-tuna
      - name: Create a release on Channel associated with the branch
        uses: docker://replicated/vendor-cli:latest
        with:
          args: release create --auto -y --yaml-dir=on-prem/manifests
        env:
          REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
          REPLICATED_APP: guestbook-tuna
          GITHUB_BRANCH_NAME: ${{ steps.get_branch.outputs.branch }}
          GITHUB_TAG_NAME: ${{ steps.get_tag.outputs.tag }}
      - name: Create a kurl release
        uses: docker://replicated/vendor-cli:latest
        with:
          args: installer create --auto -y --yaml-file=on-prem/kurl-installer.yaml
        env:
          REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
          REPLICATED_APP: guestbook-tuna
          GITHUB_BRANCH_NAME: ${{ steps.get_branch.outputs.branch }}
          GITHUB_TAG_NAME: ${{ steps.get_tag.outputs.tag }}
